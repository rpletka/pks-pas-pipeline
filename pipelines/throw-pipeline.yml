ops_dir_config_params: &ops-dir-config-params
  OPSMAN_DOMAIN_OR_IP_ADDRESS: ((opsman_domain_or_ip_address))
  OPSMAN_USERNAME: ((opsman_admin_username))

pks_config_params: &pks-config-params
  IAAS: vsphere
  OPSMAN_DOMAIN_OR_IP_ADDRESS: ((opsman_domain_or_ip_address))
  OPSMAN_USERNAME: ((opsman_admin_username))
  OPSMAN_PASSWORD: ((opsman_admin_password))


resource_types:
- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tag: latest-final

resources:
- name: pcf-pipelines
  type: git
  source:
    uri: https://github.com/pivotal-cf/pcf-pipelines.git
    branch: master

- name: nsx-t-ci-pipeline
  type: git
  source:
    uri: https://github.com/sparameswaran/nsx-t-ci-pipeline.git
    branch: master

- name: pcf-ops-manager
  type: pivnet
  source:
    api_token: ((pivnet_token))
    product_slug: ops-manager
    product_version: ((opsman_major_minor_version))
    sort_by: semver

# Comment this off if planning to use PKS v1.1 and its not on pivnet
- name: pivotal-container-service
  type: pivnet
  source:
    api_token: ((pivnet_token))
    product_slug: pivotal-container-service
    product_version: ((pks_major_minor_version))
    sort_by: semver

# Uncomment to use s3 bucket if PKS tile is NOT on pivnet...
# - name: pivotal-container-service
#   type: s3
#   source:
#     access_key_id: ((s3_creds_access_key_id))
#     secret_access_key: ((s3_creds_secret_access_key))
#     bucket: ((s3_bucket))
#     regexp: ((s3_pks_tile_path)) #pks/pivotal-container-service-1.1.0.pivotal
#     region_name: ((s3_region))

# Uncomment to use file server if PKS tile is NOT on pivnet......
# - name: pivotal-container-service
#   type: file-url
#   source:
#     url: ((pks_tile_webserver))/((pks_tile))
#     filename: ((pks_tile))


# Used for PKS user creation and deletion of clusters
- name: pcf-pipelines-utils
  type: git
  source:
    uri: https://github.com/pivotalservices/concourse-pipeline-samples.git

groups:

- name: full-pks-install
  jobs:
  - deploy-opsman
  - configure-director
  - deploy-director
  - upload-pks
  - deploy-pks
  - config-pks-controller

# From https://github.com/pivotalservices/concourse-pipeline-samples/blob/master/pipelines/pcf/pks/install-pks/pipeline.yml
- name: delete-pks-clusters
  jobs:
  - delete-clusters

- name: ops-mgr-install
  jobs:
  - deploy-opsman
  - configure-director
  - deploy-director


jobs:

- name: deploy-opsman
  plan:
  - aggregate:
    - get: pcf-pipelines
    - get: pivnet-opsman-product
      resource: pcf-ops-manager
      params: {globs: ["*.ova"]}

  - task: deploy
    file: pcf-pipelines/install-pcf/vsphere/tasks/import-opsman/task.yml
    params:
      GOVC_INSECURE: ((vcenter_insecure))
      GOVC_CA_CERT: ((vcenter_ca_cert))
      GOVC_URL: ((vcenter_host))
      GOVC_USERNAME: ((vcenter_usr))

- name: configure-director
  plan:
  - aggregate:
    - get: pcf-pipelines
    - get: nsx-t-ci-pipeline
    - get: pcf-ops-manager
      params: {globs: []}
      passed: [deploy-opsman]
      trigger: true

  - task: config-opsman-auth
    file: pcf-pipelines/tasks/config-opsman/task.yml
    params:
      OPSMAN_DOMAIN_OR_IP_ADDRESS: ((opsman_domain_or_ip_address))
      OPSMAN_USERNAME: ((opsman_admin_username))
      OPSMAN_PASSWORD: ((opsman_admin_password))
      OPS_MGR_USR: ((opsman_admin_username))
      OPS_MGR_PWD: ((opsman_admin_password))
      OM_DECRYPTION_PWD: ((om_decryption_pwd))

  - task: configure-director
    file: nsx-t-ci-pipeline/tasks/config-opsdir-2.0/task.yml
    params: *ops-dir-config-params

- name: deploy-director
  plan:
  - aggregate:
    - get: nsx-t-ci-pipeline
    - get: pcf-ops-manager
      params: {globs: []}
      passed: [configure-director]
      trigger: true

  - task: apply-changes
    file: nsx-t-ci-pipeline/tasks/apply-changes/task.yml
    params:
      OPSMAN_DOMAIN_OR_IP_ADDRESS: ((opsman_domain_or_ip_address))
      OPSMAN_USERNAME: ((opsman_admin_username))
      OPSMAN_PASSWORD: ((opsman_admin_password))

- name: upload-pks
  plan:
  - aggregate:
    - get: nsx-t-ci-pipeline
    - get: pivnet-product
      resource: pivotal-container-service
      params: {globs: ["pivotal-container-service*.pivotal"]}
    - get: pcf-ops-manager
      params: {globs: []}
      passed: [deploy-director]
      trigger: true

  - task: upload-tile
    file: nsx-t-ci-pipeline/tasks/upload-product-and-stemcell/task.yml
    params:
      IAAS: "vsphere"
      OPSMAN_DOMAIN_OR_IP_ADDRESS: ((opsman_domain_or_ip_address))
      OPSMAN_USERNAME: ((opsman_admin_username))
      OPSMAN_PASSWORD: ((opsman_admin_password))
      PIVNET_API_TOKEN: ((pivnet_token))
      OM_IP: ((om_ip))
      
- name: deploy-pks
  plan:
  - aggregate:
    - get: nsx-t-ci-pipeline
    - get: pcf-ops-manager
      params: {globs: []}
      passed: [upload-pks]
      trigger: true

  - task: configure-pks
    file: nsx-t-ci-pipeline/tasks/config-pks/task.yml
    params: *pks-config-params

  - task: deploy-pks
    file: nsx-t-ci-pipeline/tasks/apply-changes/task.yml
    params:
      OPSMAN_DOMAIN_OR_IP_ADDRESS: ((opsman_domain_or_ip_address))
      OPSMAN_USERNAME: ((opsman_admin_username))
      OPSMAN_PASSWORD: ((opsman_admin_password))
